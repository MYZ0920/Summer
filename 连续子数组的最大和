输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。
思路：以dp[]来记录最大值，如果dp[i-1]>0,则dp[i]=dp[i-1]+a[i];若dp[i-1]<=0,则dp[i]=a[i]
#include<stdio.h>
int main(void)
{
	int a[20],n,i,dp[20],max;
	printf("input n:\n");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	 scanf("%d",&a[i]);
	dp[0]=a[0];
	for(i=1;i<n;i++)
	{
		if(dp[i-1]>0)
		  dp[i]=dp[i-1]+a[i];
		else
		  dp[i]=a[i];
	}
	max=0;
	for(i=1;i<n;i++)
	{
		if(dp[i]>dp[max])
		 max=i;
	}
	printf("所有子数组的和的最大值是:%d",dp[max]);
	return 0;
}

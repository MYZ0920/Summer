给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

来源：力扣（LeetCode）
思路：加一有两种情况：1.末位是除9以外的数字，直接加1；
                    2.位次上的数字为9，9变为0
#include<stdio.h>
int main(void)
{
	int a[10],i,n;
	printf("input n:\n");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	for(i=n-1;i>=0;i--)
	{
		if(a[i]==9)
		 {
		 	a[i]=0;
		 }
		else
		{
		 a[i]=a[i]+1;
		 break;
	   }
	}
	if(a[0]==0)
	 printf("%d",1);
	for(i=0;i<n;i++)
	  printf("%d",a[i]);
	return 0;
}

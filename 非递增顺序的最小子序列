给你一个数组 nums，请你从中抽取一个子序列，满足该子序列的元素之和 严格 大于未包含在该子序列中的各元素之和。

如果存在多个解决方案，只需返回 长度最小 的子序列。如果仍然有多个解决方案，则返回 元素之和最大 的子序列。

与子数组不同的地方在于，「数组的子序列」不强调元素在原数组中的连续性，也就是说，它可以通过从数组中分离一些（也可能不分离）元素得到。

来源：力扣（LeetCode）
思路：先按降序排序，后相加
#include<stdio.h>
int sumx(int a[],int n,int i);
int main(void)
{
	int i,j,t,n,a[10000],sum=0,sum1,k,index,flag=0;
	printf("input n:\n");
	scanf("%d",&n);
	printf("input numbers:\n");
	for(i=0;i<n;i++)
	 scanf("%d",&a[i]);
	for(i=0;i<n-1;i++)
	{
		index=i;
		for(j=i+1;j<n;j++)
		 if(a[index]<a[j])
		   index=j;
	     t=a[index];
	     a[index]=a[i];
	     a[i]=t;
	}
	for(i=0;i<n;i++)
	{
		sum=sum+a[i];
	    sum1=sumx(a,n,i);
		if(sum>sum1)
		 for(k=0;k<=i;k++)
		 {
		   printf("%d ",a[k]);
		   flag=1;
	     }
	    if(flag==1)
	     break;
	}
	return 0;
} 
int sumx(int a[],int n,int i)
{
	int k,sum=0;
	for(k=i+1;k<n;k++)
	 sum=sum+a[k];
	return sum;
} 
